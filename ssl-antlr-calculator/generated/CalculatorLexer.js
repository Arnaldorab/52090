// Generated from c:/Windows/System32/ssl-antlr-calculator/Calculator.g4 by ANTLR 4.13.2
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,25,138,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,1,0,1,0,1,0,1,0,1,0,1,
0,1,0,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,
4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,
7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,15,
1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,4,19,117,8,19,11,19,12,19,118,1,
20,1,20,1,21,1,21,1,22,1,22,1,23,3,23,128,8,23,1,23,1,23,1,24,4,24,133,8,
24,11,24,12,24,134,1,24,1,24,0,0,25,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,
9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,
43,22,45,23,47,24,49,25,1,0,3,2,0,65,90,97,122,1,0,48,57,2,0,9,9,32,32,140,
0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,
0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,
0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,
35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,
0,0,0,47,1,0,0,0,0,49,1,0,0,0,1,51,1,0,0,0,3,60,1,0,0,0,5,62,1,0,0,0,7,64,
1,0,0,0,9,73,1,0,0,0,11,75,1,0,0,0,13,85,1,0,0,0,15,91,1,0,0,0,17,93,1,0,
0,0,19,95,1,0,0,0,21,97,1,0,0,0,23,99,1,0,0,0,25,101,1,0,0,0,27,103,1,0,
0,0,29,105,1,0,0,0,31,107,1,0,0,0,33,109,1,0,0,0,35,111,1,0,0,0,37,113,1,
0,0,0,39,116,1,0,0,0,41,120,1,0,0,0,43,122,1,0,0,0,45,124,1,0,0,0,47,127,
1,0,0,0,49,132,1,0,0,0,51,52,5,109,0,0,52,53,5,105,0,0,53,54,5,101,0,0,54,
55,5,110,0,0,55,56,5,116,0,0,56,57,5,114,0,0,57,58,5,97,0,0,58,59,5,115,
0,0,59,2,1,0,0,0,60,61,5,123,0,0,61,4,1,0,0,0,62,63,5,125,0,0,63,6,1,0,0,
0,64,65,5,105,0,0,65,66,5,109,0,0,66,67,5,112,0,0,67,68,5,114,0,0,68,69,
5,105,0,0,69,70,5,109,0,0,70,71,5,105,0,0,71,72,5,114,0,0,72,8,1,0,0,0,73,
74,5,59,0,0,74,10,1,0,0,0,75,76,5,118,0,0,76,77,5,101,0,0,77,78,5,114,0,
0,78,79,5,100,0,0,79,80,5,97,0,0,80,81,5,100,0,0,81,82,5,101,0,0,82,83,5,
114,0,0,83,84,5,111,0,0,84,12,1,0,0,0,85,86,5,102,0,0,86,87,5,97,0,0,87,
88,5,108,0,0,88,89,5,115,0,0,89,90,5,111,0,0,90,14,1,0,0,0,91,92,5,34,0,
0,92,16,1,0,0,0,93,94,5,32,0,0,94,18,1,0,0,0,95,96,5,46,0,0,96,20,1,0,0,
0,97,98,5,44,0,0,98,22,1,0,0,0,99,100,5,33,0,0,100,24,1,0,0,0,101,102,5,
63,0,0,102,26,1,0,0,0,103,104,5,58,0,0,104,28,1,0,0,0,105,106,5,42,0,0,106,
30,1,0,0,0,107,108,5,47,0,0,108,32,1,0,0,0,109,110,5,43,0,0,110,34,1,0,0,
0,111,112,5,45,0,0,112,36,1,0,0,0,113,114,5,61,0,0,114,38,1,0,0,0,115,117,
7,0,0,0,116,115,1,0,0,0,117,118,1,0,0,0,118,116,1,0,0,0,118,119,1,0,0,0,
119,40,1,0,0,0,120,121,7,1,0,0,121,42,1,0,0,0,122,123,5,40,0,0,123,44,1,
0,0,0,124,125,5,41,0,0,125,46,1,0,0,0,126,128,5,13,0,0,127,126,1,0,0,0,127,
128,1,0,0,0,128,129,1,0,0,0,129,130,5,10,0,0,130,48,1,0,0,0,131,133,7,2,
0,0,132,131,1,0,0,0,133,134,1,0,0,0,134,132,1,0,0,0,134,135,1,0,0,0,135,
136,1,0,0,0,136,137,6,24,0,0,137,50,1,0,0,0,4,0,118,127,134,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class CalculatorLexer extends antlr4.Lexer {

    static grammarFileName = "Calculator.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'mientras'", "'{'", "'}'", "'imprimir'", 
                         "';'", "'verdadero'", "'falso'", "'\"'", "' '", 
                         "'.'", "','", "'!'", "'?'", "':'", "'*'", "'/'", 
                         "'+'", "'-'", "'='", null, null, "'('", "')'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, "MUL", 
                          "DIV", "ADD", "SUB", "EQ", "ID", "INT", "LPAREN", 
                          "RPAREN", "NEWLINE", "WS" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", 
                      "T__13", "MUL", "DIV", "ADD", "SUB", "EQ", "ID", "INT", 
                      "LPAREN", "RPAREN", "NEWLINE", "WS" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

CalculatorLexer.EOF = antlr4.Token.EOF;
CalculatorLexer.T__0 = 1;
CalculatorLexer.T__1 = 2;
CalculatorLexer.T__2 = 3;
CalculatorLexer.T__3 = 4;
CalculatorLexer.T__4 = 5;
CalculatorLexer.T__5 = 6;
CalculatorLexer.T__6 = 7;
CalculatorLexer.T__7 = 8;
CalculatorLexer.T__8 = 9;
CalculatorLexer.T__9 = 10;
CalculatorLexer.T__10 = 11;
CalculatorLexer.T__11 = 12;
CalculatorLexer.T__12 = 13;
CalculatorLexer.T__13 = 14;
CalculatorLexer.MUL = 15;
CalculatorLexer.DIV = 16;
CalculatorLexer.ADD = 17;
CalculatorLexer.SUB = 18;
CalculatorLexer.EQ = 19;
CalculatorLexer.ID = 20;
CalculatorLexer.INT = 21;
CalculatorLexer.LPAREN = 22;
CalculatorLexer.RPAREN = 23;
CalculatorLexer.NEWLINE = 24;
CalculatorLexer.WS = 25;



