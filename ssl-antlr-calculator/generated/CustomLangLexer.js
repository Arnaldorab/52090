// Generated from c:/Windows/System32/ssl-antlr-calculator/Calculator.g4 by ANTLR 4.13.2
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,26,142,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,1,0,1,0,1,1,
1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,
1,10,1,11,1,11,1,12,4,12,79,8,12,11,12,12,12,80,1,13,1,13,1,14,1,14,1,15,
1,15,1,16,3,16,90,8,16,1,16,1,16,1,17,4,17,95,8,17,11,17,12,17,96,1,17,1,
17,1,18,1,18,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,21,
1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,23,1,23,1,23,1,23,1,
23,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,1,25,1,25,0,0,
26,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,
29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,
1,0,4,2,0,65,90,97,122,1,0,48,57,2,0,9,9,32,32,5,0,33,34,44,44,46,46,58,
58,63,63,144,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,
0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,
0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,
33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,
0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,1,53,1,0,0,0,3,55,
1,0,0,0,5,57,1,0,0,0,7,59,1,0,0,0,9,61,1,0,0,0,11,63,1,0,0,0,13,65,1,0,0,
0,15,67,1,0,0,0,17,69,1,0,0,0,19,71,1,0,0,0,21,73,1,0,0,0,23,75,1,0,0,0,
25,78,1,0,0,0,27,82,1,0,0,0,29,84,1,0,0,0,31,86,1,0,0,0,33,89,1,0,0,0,35,
94,1,0,0,0,37,100,1,0,0,0,39,102,1,0,0,0,41,104,1,0,0,0,43,113,1,0,0,0,45,
122,1,0,0,0,47,124,1,0,0,0,49,134,1,0,0,0,51,140,1,0,0,0,53,54,5,34,0,0,
54,2,1,0,0,0,55,56,5,32,0,0,56,4,1,0,0,0,57,58,5,46,0,0,58,6,1,0,0,0,59,
60,5,44,0,0,60,8,1,0,0,0,61,62,5,33,0,0,62,10,1,0,0,0,63,64,5,63,0,0,64,
12,1,0,0,0,65,66,5,58,0,0,66,14,1,0,0,0,67,68,5,42,0,0,68,16,1,0,0,0,69,
70,5,47,0,0,70,18,1,0,0,0,71,72,5,43,0,0,72,20,1,0,0,0,73,74,5,45,0,0,74,
22,1,0,0,0,75,76,5,61,0,0,76,24,1,0,0,0,77,79,7,0,0,0,78,77,1,0,0,0,79,80,
1,0,0,0,80,78,1,0,0,0,80,81,1,0,0,0,81,26,1,0,0,0,82,83,7,1,0,0,83,28,1,
0,0,0,84,85,5,40,0,0,85,30,1,0,0,0,86,87,5,41,0,0,87,32,1,0,0,0,88,90,5,
13,0,0,89,88,1,0,0,0,89,90,1,0,0,0,90,91,1,0,0,0,91,92,5,10,0,0,92,34,1,
0,0,0,93,95,7,2,0,0,94,93,1,0,0,0,95,96,1,0,0,0,96,94,1,0,0,0,96,97,1,0,
0,0,97,98,1,0,0,0,98,99,6,17,0,0,99,36,1,0,0,0,100,101,5,123,0,0,101,38,
1,0,0,0,102,103,5,125,0,0,103,40,1,0,0,0,104,105,5,109,0,0,105,106,5,105,
0,0,106,107,5,101,0,0,107,108,5,110,0,0,108,109,5,116,0,0,109,110,5,114,
0,0,110,111,5,97,0,0,111,112,5,115,0,0,112,42,1,0,0,0,113,114,5,105,0,0,
114,115,5,109,0,0,115,116,5,112,0,0,116,117,5,114,0,0,117,118,5,105,0,0,
118,119,5,109,0,0,119,120,5,105,0,0,120,121,5,114,0,0,121,44,1,0,0,0,122,
123,5,59,0,0,123,46,1,0,0,0,124,125,5,118,0,0,125,126,5,101,0,0,126,127,
5,114,0,0,127,128,5,100,0,0,128,129,5,97,0,0,129,130,5,100,0,0,130,131,5,
101,0,0,131,132,5,114,0,0,132,133,5,111,0,0,133,48,1,0,0,0,134,135,5,102,
0,0,135,136,5,97,0,0,136,137,5,108,0,0,137,138,5,115,0,0,138,139,5,111,0,
0,139,50,1,0,0,0,140,141,7,3,0,0,141,52,1,0,0,0,4,0,80,89,96,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class CustomLangLexer extends antlr4.Lexer {

    static grammarFileName = "Calculator.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'\"'", "' '", "'.'", "','", "'!'", "'?'", 
                         "':'", "'*'", "'/'", "'+'", "'-'", "'='", null, 
                         null, "'('", "')'", null, null, "'{'", "'}'", "'mientras'", 
                         "'imprimir'", "';'", "'verdadero'", "'falso'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          "MUL", "DIV", "ADD", "SUB", "EQ", "ID", "INT", 
                          "LPAREN", "RPAREN", "NEWLINE", "WS", "LLAVEL", 
                          "LLAVER", "MIENTRAS", "IMPRIMIR", "PYC", "VERDADERO", 
                          "FALSO", "SIMBOLO" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "MUL", "DIV", "ADD", "SUB", "EQ", "ID", "INT", "LPAREN", 
                      "RPAREN", "NEWLINE", "WS", "LLAVEL", "LLAVER", "MIENTRAS", 
                      "IMPRIMIR", "PYC", "VERDADERO", "FALSO", "SIMBOLO" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

CustomLangLexer.EOF = antlr4.Token.EOF;
CustomLangLexer.T__0 = 1;
CustomLangLexer.T__1 = 2;
CustomLangLexer.T__2 = 3;
CustomLangLexer.T__3 = 4;
CustomLangLexer.T__4 = 5;
CustomLangLexer.T__5 = 6;
CustomLangLexer.T__6 = 7;
CustomLangLexer.MUL = 8;
CustomLangLexer.DIV = 9;
CustomLangLexer.ADD = 10;
CustomLangLexer.SUB = 11;
CustomLangLexer.EQ = 12;
CustomLangLexer.ID = 13;
CustomLangLexer.INT = 14;
CustomLangLexer.LPAREN = 15;
CustomLangLexer.RPAREN = 16;
CustomLangLexer.NEWLINE = 17;
CustomLangLexer.WS = 18;
CustomLangLexer.LLAVEL = 19;
CustomLangLexer.LLAVER = 20;
CustomLangLexer.MIENTRAS = 21;
CustomLangLexer.IMPRIMIR = 22;
CustomLangLexer.PYC = 23;
CustomLangLexer.VERDADERO = 24;
CustomLangLexer.FALSO = 25;
CustomLangLexer.SIMBOLO = 26;



